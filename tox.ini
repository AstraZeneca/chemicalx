# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    lint
    flake8
    mypy
    docs
    doc8
    docstr-coverage
    py

[testenv]
commands =
    coverage run -m pytest
deps =
    torch
    pytest
    coverage

[testenv:coverage]
commands =
    coverage xml
skip_install = true
deps =
    coverage

[testenv:lint]
deps =
    black
    isort
skip_install = true
commands =
    black .
    isort .
description = Run linters.

[testenv:flake8]
deps =
    darglint
    flake8
    flake8-black
    flake8-bugbear
    flake8-docstrings
    flake8-isort
    pep8-naming
    pydocstyle
skip_install = true
commands =
    flake8 --ignore=E203,W503 --max-line-length 120 .

[testenv:mypy]
deps = mypy
skip_install = true
commands =
    mypy --install-types --non-interactive --ignore-missing-imports .
description = Run the mypy tool to check static typing on the project.

[testenv:docs]
changedir = docs
extras =
    docs
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    python -m sphinx -W -b html     -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    python -m sphinx -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt
whitelist_externals =
    /bin/cat
    /bin/cp
    /bin/mkdir
    /usr/bin/cat
    /usr/bin/cp
    /usr/bin/mkdir

[testenv:docs-build]
changedir = docs
extras =
    docs
commands =
    python -m sphinx -W -b html     -d build/doctrees source build/html
    python -m sphinx -W -b coverage -d build/doctrees source build/coverage

[testenv:doc8]
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/
description = Run the doc8 tool to check the style of the RST files in the project docs.

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage chemicalx/ examples/ tests/ data_cleaning/ --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage

[testenv:pyroma]
deps =
    pygments
    pyroma
skip_install = true
commands = pyroma --min=10 .
description = Run the pyroma tool to check the package friendliness of the project.

[testenv:manifest]
deps = check-manifest
skip_install = true
commands = check-manifest
